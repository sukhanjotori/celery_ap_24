version: '3.8'

services:

  flower:
    image: mher/flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/

  rabbitmq:
    image: rabbitmq:management 
    container_name: rabbitmq
    ports:
      - 5672:5672 # amqp port
      - 15672:15672 # http port

  redis:
    image: redis:7.0.11-alpine

  django:
    container_name: django
    build:
      context: ./dcelery
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./dcelery:/usr/src/app/
    ports:
      - "8001:8000"
    environment:
      - DEBUG=1
      - ALLOWED_HOSTS=localhost, 127.0.0.1
    depends_on:
      - redis

  celery:
    container_name: celery
    build:
      context: ./dcelery 
    command: celery --app=dcelery worker --hostname=celeryWorker1 -l INFO -Q tasks,dead_letter 
    # command: celery --app=dcelery worker -l INFO -Q celery,celery:1,celery:2,celery:3 # Redis sets priority to max 4 
    #   command: celery -app=dcelery worker -l INFO  -Q queue1 (for distributing task across different celery worker)
    volumes:
      - ./dcelery:/usr/src/app/
    environment:
      - DEBUG=1
      - ALLOWED_HOSTS=localhost, 127.0.0.1
    depends_on:
      - redis
      - django
      - rabbitmq

  # celery2:
  #   container_name: celery_standalone
  #   build:
  #     context: ./celeryworker 
  #     dockerfile: Dockerfile
  #   command: celery -A celerytask worker -l INFO  -Q queue2
  #   volumes:
  #     - ./celeryworker:/usr/src/app/
  #   depends_on:
  #     - redis
  #     - django
